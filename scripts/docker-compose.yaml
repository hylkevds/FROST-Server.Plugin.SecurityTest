version: '3'

services:
  web:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - serviceRootUrl=http://localhost:8080/FROST-Server
      - queueLoggingInterval=1000
      - http_cors_enable=true
      - http_cors_allowed_origins=*
      - persistence_autoUpdateDatabase=true
      - persistence_db_driver=org.postgresql.Driver
      - persistence_db_url=jdbc:postgresql://securitytest_database:5432/sensorthings
      - persistence_db_username=sensorthings
      - persistence_db_password=test
      - persistence_idGenerationMode=ServerAndClientGenerated
      - auth_provider=de.fraunhofer.iosb.ilt.frostserver.auth.basic.BasicAuthProvider
      - auth_allowAnonymousRead=false
      - auth_authenticateOnly=true
      - auth_realmName=FROST-Server
      - auth_db_driver=org.postgresql.Driver
      - auth_db_url=jdbc:postgresql://securitytest_database:5432/sensorthings
      - auth_db_username=sensorthings
      - auth_db_password=test
      - auth_autoUpdateDatabase=true
      - auth_plainTextPassword=false
      - FROST_LL=debug
      - FROST_LL_service=debug

  securitytest_database:
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_DB=sensorthings
      - POSTGRES_USER=sensorthings
      - POSTGRES_PASSWORD=test
    volumes:
      - securitytest_volume:/var/lib/postgresql/data
    ports:
      - 6543:5432

volumes:
    securitytest_volume:
